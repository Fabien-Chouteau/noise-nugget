with "Ada_Drivers_Library/boards/stm32f407_discovery/stm32f407_discovery_full.gpr";

project Noise_Nugget is

  type Generator_Type is ("fx-flanger", "synth", "sampler");
  Generator : Generator_Type := External("GENERATOR_TYPE", "synth");

  type Sample_Type is ("cat", "guitar", "piano");
  Sample : Sample_Type := External("SAMPLE_TYPE", "cat");

  package Naming is
    for Body ("Sound_Generator") use "sound_generator-" & Generator & ".adb";
    for Body ("Main") use "main-" & Generator & ".adb";
  end Naming;

  for Runtime ("Ada") use STM32F407_Discovery_Full'Runtime ("Ada");
  for Target use "arm-eabi";
  for Main use ("main-" & Generator & ".adb");
  for Languages use ("Ada", "asm_cpp");

  Src_Dirs := ("src/",
               "ada-synth-lib/src");

  for Source_Dirs use Src_Dirs;
  for Object_Dir use "obj/";
  for Create_Missing_Dirs use "True";

   package Compiler is
      for Default_Switches ("ada") use STM32F407_Discovery_Full.Compiler'Default_Switches ("ada");

      case Sample is
         when "cat" =>
            for Default_Switches ("asm_cpp") use ("-D_SAMPLE_CAT");
         when "guitar" =>
            for Default_Switches ("asm_cpp") use ("-D_SAMPLE_GUITAR");
         when "piano" =>
            for Default_Switches ("asm_cpp") use ("-D_SAMPLE_PIANO");
      end case;
   end Compiler;

  package Linker is
     for Default_Switches ("Ada") use
       ("-Wl,--gc-sections",
        "-Wl,--print-memory-usage");
  end Linker;

  package Ide is
     for Gnat use "arm-eabi-gnat";
     for Gnatlist use "arm-eabi-gnatls";
     for Debugger_Command use "arm-eabi-gdb";
     for Program_Host use "localhost:4242";
     for Communication_Protocol use "remote";
     for Connection_Tool use "st-util";
  end Ide;

end Noise_Nugget;
